name: .NET Build test (Windows)

on:
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2
    
    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v1
      
    - name: Install dependencies
      run: dotnet restore
      
    - name: Build Solution
      run: |
        msbuild.exe AnthillNet.sln /nologo /nr:false /p:DeployOnBuild=true /p:DeployDefaultTarget=WebPublish /p:WebPublishMethod=FileSystem /p:DeleteExistingFiles=True /p:platform="Any CPU" /p:configuration="Release" /p:PublishUrl="../_build"
  test:
    runs-on: windows-latest
    needs: build
    env:
      config: 'Release'

    steps:
    - uses: actions/checkout@v2

    - name: Set PR Number
      id: PRNUMBER
      if: ${{ github.event_name == 'pull_request' }}
      uses: kkak10/pr-number-action@v1.3

    - name: Set Test Title
      run: |
           if ${{ github.event_name == 'pull_request' }}
           then
              echo "::set-env name=title::Test Run for PR #${{steps.PRNUMBER.outputs.pr}} (${{github.run_number}})"
              echo "::set-env name=file_name::TestReport.${{steps.PRNUMBER.outputs.pr}}.${{github.run_number}}.md"
              echo "title=Test Run for PR #${{steps.PRNUMBER.outputs.pr}} (${{github.run_number}})" >> $GITHUB_ENV
              echo "file_name=TestReport.${{steps.PRNUMBER.outputs.pr}}.${{github.run_number}}.md" >> $GITHUB_ENV
           else
              echo "::set-env name=title::Test Run ${{github.run_number}}"
              echo "::set-env name=file_name::TestReport.${{github.run_number}}.md"
              echo "title=Test Run ${{github.run_number}}" >> $GITHUB_ENV
              echo "file_name=TestReport.${{github.run_number}}.md" >> $GITHUB_ENV
           fi
    - name: Run TCP Test
      run: dotnet test TestingLab.csproj --no-build --no-restore  --configuration $config --logger:"liquid.md;LogFileName=${{github.workspace}}/${{env.file_name}};Title=${{env.title}};"

    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v2
      if: ${{always()}}
      with:
        name: 'Test Run'
        path: ${{github.workspace}}/${{env.file_name}}

    - name: comment PR
      uses: machine-learning-apps/pr-comment@master
      if: ${{ github.event_name == 'pull_request' }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        path: ${{env.file_name}}
